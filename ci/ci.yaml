---
resource_types:
  - name: pull-request
    type: registry-image
    source:
      repository: docker.io/teliaoss/github-pr-resource
  - name: rss-resource
    type: registry-image
    source:
      repository: suhlig/concourse-rss-resource
      tag: latest
resources:
  - name: pull-request
    type: pull-request
    icon: source-branch
    check_every: 1m
    source:
      repository: realliance/senior-game
      access_token: ((github-access-token))
      disable_ci_skip: true
      disable_forks: true
  - name: unity-beta-releases
    type: rss-resource
    icon: rss
    source:
      url: https://unity3d.com/unity/beta/latest.xml
  - name: game-ci-docker
    type: git
    icon: git
    source:
      uri: https://github.com/game-ci/docker
      branch: main
  - name: senior-game-main
    type: git
    icon: git
    source:
      uri: https://github.com/realliance/senior-game
      branch: main
  - name: oci-build-task
    type: registry-image
    icon: docker
    source:
      repository: docker.io/vito/oci-build-task
  - name: quay
    type: registry-image
    icon: docker
    source:
      repository: quay.io/realliance/unity-editor
      username: ((quay-ci-account.username))
      password: ((quay-ci-account.token))
  - name: editor-image
    type: registry-image
    icon: docker
    source:
      repository: quay.io/realliance/unity-editor
      tag: 2021.1.0b5
  - name: dotnet-sdk
    type: registry-image
    icon: docker
    source:
      repository: mcr.microsoft.com/dotnet/sdk
      tag: '5.0'
  - name: busybox
    type: registry-image
    icon: docker
    source:
      repository: busybox

jobs:
  - name: unity-image-build
    plan:
      - get: unity-beta-releases
        trigger: true
      - get: busybox
      - get: oci-build-task
      - get: game-ci-docker
      - task: get-variables-from-feed
        image: busybox
        config:
          platform: linux
          inputs:
            - name: unity-beta-releases
          outputs:
            - name: version
            - name: changeset
          run:
            path: /bin/sh
            args:
              - -exc
              - |
                cat unity-beta-releases/guid > changeset/changeset
                sed 's/Release //' unity-beta-releases/title > version/version
      - load_var: version
        file: version/version
      - load_var: changeset
        file: changeset/changeset
      - task: build
        privileged: true
        image: oci-build-task
        config:
          platform: linux
          inputs:
            - name: game-ci-docker
              path: .
          outputs:
            - name: image
          caches:
            - path: cache
          params:
            BUILD_ARG_version: ((.:version))
            BUILD_ARG_changeSet: ((.:changeset))
            BUILD_ARG_module: linux-il2cpp
            CONTEXT: ./editor
          run:
            path: build
      - put: quay
        params:
          image: image/image.tar
          additional_tags: version/version
  - name: unity-generate-license
    plan:
      - get: editor-image
      - task: create-license
        image: editor-image
        config:
          platform: linux
          run:
            path: /bin/sh
            args:
              - -xc
              - |
                unity-editor -logFile /dev/stdout -batchmode -nographics \
                -username ((unity-account.username)) -password ((unity-account.password)) \
                | grep 'LICENSE SYSTEM .* Posting *' \
                | sed 's/.*Posting *//'
  - name: set-pipeline
    plan:
      - get: senior-game-main
        trigger: true
      - set_pipeline: self
        file: senior-game-main/ci/ci.yaml
  - name: pr-validation
    plan:
      - get: pull-request
        trigger: true
        version: every
      - put: pull-request
        params:
          path: pull-request
          status: pending
      - get: editor-image
      - get: dotnet-sdk
      - in_parallel:
          - task: linting
            image: dotnet-sdk
            config:
              platform: linux
              caches:
                - path: cache
              inputs:
                - name: pull-request
                  path: .
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    export NUGET_PACKAGES=`pwd`/cache
                    dotnet tool restore
                    dotnet format --check Assets/Scripts -f
          - do:
            - task: build
              image: editor-image
              config:
                platform: linux
                inputs:
                  - name: pull-request
                    path: .
                outputs:
                  - name: Library
                run:
                  path: /bin/sh
                  args:
                    - -xc
                    - |
                      mkdir -p /root/.local/share/unity3d/Unity/
                      echo '((unity-license))' > '/root/.local/share/unity3d/Unity/Unity_lic.ulf'
                      unity-editor -nographics -batchmode -projectPath '.' -quit
            - in_parallel:
                - task: unit-test
                  image: editor-image
                  config:
                    platform: linux
                    inputs:
                      - name: pull-request
                        path: .
                      - name: Library
                    run:
                      path: /bin/sh
                      args:
                        - -exc
                        - |
                          mkdir -p /root/.local/share/unity3d/Unity/
                          echo '((unity-license))' > '/root/.local/share/unity3d/Unity/Unity_lic.ulf'
                          unity-editor -nographics -runTests -batchmode -projectPath '.' -testResults /dev/stdout -testPlatform PlayMode
                - task: static-code-analysis
                  image: dotnet-sdk
                  config:
                    platform: linux
                    caches:
                      - path: cache
                    inputs:
                      - name: pull-request
                        path: .
                      - name: Library
                    run:
                      path: /bin/sh
                      args:
                        - -exc
                        - |
                          export NUGET_PACKAGES=`pwd`/cache
                          dotnet tool restore
                          dotnet gendarme --config rules.xml --set default Library/ScriptAssemblies/Networking.dll Library/ScriptAssemblies/UI.dll Library/ScriptAssemblies/Global.dll Library/ScriptAssemblies/WWW.dll
                          dotnet gendarme --config rules.xml --set unit-test Library/ScriptAssemblies/Tests.dll
        on_failure:
          put: pull-request
          params:
            path: pull-request
            status: failure
      - put: pull-request
        params:
          path: pull-request
          status: success

