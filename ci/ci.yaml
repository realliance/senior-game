---
resource_types:
  - name: pull-request
    type: registry-image
    source:
      repository: docker.io/teliaoss/github-pr-resource
  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
resources:
  - name: pull-request
    type: pull-request
    icon: source-branch
    webhook_token: ((webhook-token))
    check_every: 1h
    source:
      repository: realliance/senior-game
      access_token: ((github-access-token))
      disable_ci_skip: true
      disable_forks: true
  - name: oci-build-task
    type: registry-image
    icon: docker
    check_every: never
    source:
      repository: docker.io/vito/oci-build-task
  - name: senior-game-main
    type: git
    icon: git
    webhook_token: ((webhook-token))
    check_every: 1h
    source:
      uri: https://github.com/realliance/senior-game
      branch: main
  - name: senior-game-tagged-release
    type: git
    icon: git
    webhook_token: ((webhook-token))
    check_every: 1h
    source:
      uri: https://github.com/realliance/senior-game
      tag_filter: '*'
      branch: main
  - name: quay
    type: registry-image
    icon: docker
    check_every: never
    source:
      repository: quay.io/realliance/senior-game
      username: ((quay-ci-account.username))
      password: ((quay-ci-account.token))
  - name: rust-nightly
    type: registry-image
    icon: docker
    check_every: never
    source:
      repository: docker.io/rustlang/rust
      tag: nightly-buster
  - name: python
    type: registry-image
    icon: docker
    check_every: never
    source:
      repository: docker.io/python
  - name: sentry-cli
    type: registry-image
    icon: docker
    check_every: never
    source:
      repository: docker.io/getsentry/sentry-cli
  - name: slack-ci-senior
    type: slack-notification
    icon: slack
    check_every: never
    source:
      url: ((slack-ci-senior))
  - name: minio-linux
    type: s3
    icon: file
    source:
      bucket: client
      endpoint: https://files.game.senior.realliance.net
      access_key_id: ((senior-game-minio.accesskey))
      secret_access_key: ((senior-game-minio.secretkey))
      regexp: stable/linux(.*).zip
  - name: minio-windows
    type: s3
    icon: file
    source:
      bucket: client
      endpoint: https://files.game.senior.realliance.net
      access_key_id: ((senior-game-minio.accesskey))
      secret_access_key: ((senior-game-minio.secretkey))
      regexp: stable/windows(.*).zip
jobs:
  - name: set-pipeline
    plan:
      - get: senior-game-main
        trigger: true
      - set_pipeline: self
        file: senior-game-main/ci/ci.yaml
  - name: validate-pr
    plan:
      - get: pull-request
        trigger: true
        version: check_every
      - put: pull-request
        params:
          path: pull-request
          status: pending
      - get: rust-nightly
      - get: python
      - in_parallel:
          - task: clippy
            image: rust-nightly
            config:
              platform: linux
              params:
                CARGO_HOME: ./cargo
                RELEASE: ci
                SENTRY_DSN: ci
              caches:
                - path: target
                - path: cargo
                - path: apt
              inputs:
                - name: pull-request
                  path: .
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    apt-get update -y -o Dir::Cache=$PWD/apt > /dev/null
                    apt-get install -y --no-install-recommends \
                    -o Dir::Cache=$PWD/apt \
                    clang lld libasound2-dev libudev-dev cmake > /dev/null
                    cargo clippy
                    cargo clippy --release
          - task: rustfmt
            image: rust-nightly
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    cargo fmt -- --check
          - task: unit-test
            image: rust-nightly
            config:
              platform: linux
              params:
                CARGO_HOME: ./cargo
              caches:
                - path: target
                - path: cargo
                - path: apt
              inputs:
                - name: pull-request
                  path: .
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    apt-get update -y -o Dir::Cache=$PWD/apt > /dev/null
                    apt-get install -y --no-install-recommends \
                    -o Dir::Cache=$PWD/apt \
                    clang lld libasound2-dev libudev-dev cmake > /dev/null
                    cargo test
          - task: yamllint
            image: python
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              caches:
                - path: cache
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    pip install --cache-dir ./cache yamllint > /dev/null
                    yamllint .
          - task: pre-commit
            image: python
            params:
              SKIP: no-commit-to-branch,validate-pipeline,renovate-config
            config:
              platform: linux
              inputs:
                - name: pull-request
                  path: .
              caches:
                - path: cache
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    pip install --cache-dir ./cache pre-commit > /dev/null
                    pre-commit run --all-files
        on_failure:
          put: pull-request
          params:
            path: pull-request
            status: failure
      - put: pull-request
        params:
          path: pull-request
          status: success
  - name: tagged-release
    plan:
      - get: senior-game-tagged-release
        trigger: true
      - get: sentry-cli
      - get: oci-build-task
      - get: rust-nightly
      - load_var: tag
        file: senior-game-tagged-release/.git/ref
        reveal: true
      - task: sentry-new
        image: sentry-cli
        params:
          SENTRY_ORG: ((sentry.org))
          SENTRY_AUTH_TOKEN: ((sentry.auth-token))
          SENTRY_URL: ((sentry.url))
        config:
          platform: linux
          params:
            TAG: ((.:tag))
          inputs:
            - name: senior-game-tagged-release
              path: .
          outputs:
            - name: release
          run:
            path: /bin/sh
            args:
              - -exc
              - |
                VERSION=senior-game@$TAG
                echo $VERSION > release/version.txt
                sentry-cli releases new -p senior-server -p senior-client "$VERSION"
                sentry-cli releases set-commits --auto "$VERSION"
      - load_var: sentry-release
        file: release/version.txt
        reveal: true
      - in_parallel:
          - task: build-server
            image: oci-build-task
            params:
              BUILD_ARG_RELEASE: ((.:sentry-release))
            privileged: true
            config:
              platform: linux
              inputs:
                - name: senior-game-tagged-release
                  path: .
              outputs:
                - name: image
              caches:
                - path: cache
              run:
                path: build
          - task: build-clients
            image: rust-nightly
            config:
              platform: linux
              params:
                CARGO_HOME: ./cargo
                RELEASE: ((.:sentry-release))
                SENTRY_DSN: https://006f14a134fe4af9b94849382ad25982@sentry.realliance.net/5
                VERSION: ((.:tag))
              caches:
                - path: target
                - path: cargo
                - path: apt
              inputs:
                - name: senior-game-tagged-release
                  path: .
              outputs:
                - name: client
              run:
                path: /bin/sh
                args:
                  - -exc
                  - |
                    apt-get update -y -o Dir::Cache=$PWD/apt > /dev/null
                    apt-get install -y --no-install-recommends \
                    -o Dir::Cache=$PWD/apt \
                    clang lld libasound2-dev libudev-dev cmake mingw-w64 zip > /dev/null
                    rustup target add x86_64-pc-windows-gnu > /dev/null
                    ./build-linux-client.sh
                    ./build-windows-client.sh
      - put: quay
        params:
          image: image/image.tar
          version: ((.:tag))
      - put: minio-linux
        params:
          file: client/linux*.zip
      - put: minio-windows
        params:
          file: client/windows*.zip
      - task: sentry-finalize
        image: sentry-cli
        params:
          SENTRY_ORG: ((sentry.org))
          SENTRY_AUTH_TOKEN: ((sentry.auth-token))
          SENTRY_URL: ((sentry.url))
          VERSION: ((.:sentry-release))
        config:
          platform: linux
          run:
            path: /bin/sh
            args:
              - -exc
              - |
                sentry-cli releases finalize "$VERSION"
      - put: slack-ci-senior
        params:
          silent: true
          text: |-
            *Production Build (((.:tag)))*
            Linux Client: https://files.game.senior.realliance.net/client/stable/linux((.:tag)).zip
            Windows Client: https://files.game.senior.realliance.net/client/stabe/windows((.:tag)).zip
